{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_financialSample",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_df_joins",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Segment as string,",
				"          Country as string,",
				"          { Product } as string,",
				"          { Discount Band } as string,",
				"          {Units Sold} as string,",
				"          { Manufacturing Price } as string,",
				"          { Sale Price } as string,",
				"          { Gross Sales } as string,",
				"          { Discounts } as string,",
				"          {  Sales } as string,",
				"          { COGS } as string,",
				"          { Profit } as string,",
				"          Date as string,",
				"          {Month Number} as string,",
				"          { Month Name } as string,",
				"          Year as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(futureDate = addDays(toDate(Date,'MM/dd/yyyy','en-US'),20)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalMonth as string,",
				"          Subscription as string,",
				"          TenandID as string,",
				"          TenantName as string,",
				"          BilledRev as string,",
				"          RefreshDate as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}